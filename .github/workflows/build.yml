name: Build Executables for Windows, Linux, and macOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cx_Freeze pygame

      - name: Build Executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: python setup_freeze.py build

      - name: Build Executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python setup_freeze.py build
          mkdir -p dist/windows
          cp -r build/* dist/windows/

      - name: Build Executable (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          python setup_freeze.py build
          mkdir -p dist/macos
          cp -r build/* dist/macos/

      - name: Upload Executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-executable
          path: build/*

      - name: Upload Executable (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-executable
          path: dist/windows/*

      - name: Upload Executable (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-executable
          path: dist/macos/*
